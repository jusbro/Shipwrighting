import serial
uart = serial.Serial("/dev/serial0", baudrate=19200, timeout=3000)
import adafruit_thermal_printer
import time

ThermalPrinter = adafruit_thermal_printer.get_printer_class(2.69)

printer = ThermalPrinter(uart)

print("3D queue managment system")
print("Version 1.1")
print()
print("Name of project: ")
projectName = input("--> ")
print("Project Importance (Urgent, High, Medium, Low):")
projectImportance = input("-->")
print("Due Date: ")
dueDate = input("-->")
print("Number of Prints: ")
printQuantity = input("-->")
print("Ordering Person: ")
projectTeacher = input("-->")
print("Material (PLA, ABS, etc.): ")
projectMaterial = input("-->")
print("Estimated time to print: ")
projectTime = input("--> ")
print("Color(s) of filament: ")
projectColor = input("--> ")
#The following code is commented out because I no longer need it
#I am keeping it in code though in case I change my mind
#print("Estimated filament length of print(m): ")
#projectFilamentLength = input("--> ")
#print("Extruder Temperature: ")
#extruderTemp = input("--> ")
#print("Build Plate Temperature: ")
#extruderTemp = input("--> ")
print("Assigned Printer: ")
projectPrinter = input("--> ")
print("Build Quality: ")
projectBuildQuality = input("--> ")
print("Infill Density (%): ")
projectInfill = input("--> ")
print("Supports? (y/n)")
projectSupports = input("-->")
#print("Cooling Fan? (y/n)")
#coolingFan = input("-->")
#print("File Storage Device: ")
#fileStorageDevice = input("-->")
print("Notes: ")
projectNotes = input("--> ")



print("EXAMPLE PRINT")
print(projectName)
print("Importance: " + projectImportance)
print("Due Date: " + dueDate)
print("Number of Prints: " + printQuantity)
print("Ordering Teacher: " + projectTeacher)
print("Print Time: " + projectTime)
print("Color of filament: " + projectColor)
print("Build Material: " + projectMaterial)
#print("filament needed: " + projectFilamentLength + "m")
#print("Extrauder Temperature: " + extruderTemp + "C")
#print("Build Plate Temperature: " + extruderTemp + "C")
print("Print Supports: " + projectSupports)
#print("Cooling Fan: " + coolingFan)
#print("File Storage Device: " + fileStorageDevice)
print("Assigned Printer: " + projectPrinter)
print("Build Quality: " + projectBuildQuality)
print("Infill Density: " + projectInfill)
print("Notes: " + projectNotes)

print("Is this correct? (y/n)")
correct = input("--> ")
if correct == "y":
    print("Printing...")
    current_time = time.strftime('%I:%M:%S %p')
    current_Date = time.strftime('%a %b %d %Y')
    printer.bold = True
    printer.size = adafruit_thermal_printer.SIZE_LARGE
    printer.print("Print Queue Ticket")
    printer.size = adafruit_thermal_printer.SIZE_MEDIUM
    printer.print(projectName)
    printer.feed(1)
    printer.size = adafruit_thermal_printer.SIZE_SMALL
    printer.print("Importance: " + projectImportance)
    printer.print("Due Date: " + dueDate)
    printer.print("Number of Prints: " + printQuantity)
    printer.bold = False
    printer.feed(1)
    printer.print("Name: " + projectTeacher)
    printer.print("Est. Print Time: " + projectTime)
    printer.print("Color of Filament: " + projectColor)
    printer.print("Build Material: " + projectMaterial)
    printer.feed(1)
    #printer.print("Extruder Temperature: " + extruderTemp + "C")
    #printer.print("Build Plate Temperature: " + extruderTemp + "C")
    #printer.feed(1)
    printer.print("Print Supports: " + projectSupports)
    #printer.print("Cooling Fan: " + coolingFan)
    printer.feed(1) 
    #printer.print("File Storage Device: " + fileStorageDevice)
    #printer.feed(1)
    #printer.print("filament needed: " + projectFilamentLength + "m")
    printer.print("Assigned Printer: " + projectPrinter)
    printer.print("Build Quality: " + projectBuildQuality)
    printer.print("Infill Density: " + projectInfill + "%")
    printer.feed(1)
    printer.print("Notes: ")
    printer.print(projectNotes)
    printer.feed(1)
    printer.print("Ticket Created: ")
    printer.print(current_time)
    printer.print(current_Date)
    printer.feed(3)
else:
    print("Restarting...")
    exit()
